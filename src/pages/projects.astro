---
export const prerender = true;

import Layout from "../layouts/Layout.astro";

import { Card } from "../components/Card";
import { Navigation } from "../components/Nav";
import { Article } from "../components/Article";

import { getCollection } from "astro:content";
const allProjects = await getCollection("projects");

import { Eye } from "lucide-react";

import { Redis } from "@upstash/redis";
const redis = Redis.fromEnv();

const views = (
  await redis.mget<number[]>(
    ...allProjects.map((p) => ["pageviews", "projects", p.slug].join(":"))
  )
).reduce(
  (acc, v, i) => {
    acc[allProjects[i].slug] = v ?? 0;
    return acc;
  },
  {} as Record<string, number>
);
---

<Layout>
  <div
    class="relative min-h-screen bg-gradient-to-tl from-zinc-900 via-zinc-400/10 to-zinc-900"
  >
    <div class="relative pb-16">
      <Navigation />
      <div
        class="px-6 pt-20 mx-auto space-y-8 max-w-7xl lg:px-8 md:space-y-16 md:pt-24 lg:pt-32"
      >
        <div class="max-w-2xl mx-auto lg:mx-0">
          <h2
            class="text-3xl font-bold tracking-tight text-zinc-100 sm:text-4xl"
          >
            Projects
          </h2>
          <p class="mt-4 text-zinc-400">
            All of my projects that I made so far are listed below
          </p>
        </div>

        <div class="w-full h-px bg-zinc-800"></div>

        <div class="grid grid-cols-1 gap-4 mx-auto lg:mx-0 md:grid-cols-3">
          <div class="grid grid-cols-1 gap-4">
            {
              allProjects
                .filter((_, i) => i % 3 === 0)
                .map((project) => (
                  <Card client:load>
                    <a href={`/projects/${project.slug}`}>
                      <Article
                        project={project.data}
                        views={views[project.slug] ?? 0}
                      />
                    </a>
                  </Card>
                ))
            }
          </div>
          <div class="grid grid-cols-1 gap-4">
            {
              allProjects
                .filter((_, i) => i % 3 === 1)
                .map((project) => (
                  <Card client:load>
                    <a href={`/projects/${project.slug}`}>
                      <Article
                        project={project.data}
                        views={views[project.slug] ?? 0}
                      />
                    </a>
                  </Card>
                ))
            }
          </div>
          <div class="grid grid-cols-1 gap-4">
            {
              allProjects
                .filter((_, i) => i % 3 === 2)
                .map((project) => (
                  <Card client:load>
                    <a href={`/projects/${project.slug}`}>
                      <Article
                        project={project.data}
                        views={views[project.slug] ?? 0}
                      />
                    </a>
                  </Card>
                ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>
